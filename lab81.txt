<input type=button value=Solve onclick=solve()> 
<div id=solution> 
Solution area 
</div>/body> 
<script> 
function solve() 
{
  let a = document.getElementById('a'); 
  let b= document.getElementById('b'); 
  let c= document.getElementById('b'); 
let err ='';
if (i sNa

{
   err ='a is not a number."; 
   a.focus(); 
   alert('please enter a number'); 
}
else if (isNaN(b.value)) 
{
   err='b is not a number."; 
   b.focus(); 
   alert(('please enter a number');
}
else if (isNaN(c.value))
{ 
   err='c is not a number.'; 
   C.focus(); 
   alert('please enter a number'); 
}
else 
{ 
 
   a = parseFloat(a.value); 
   b= parseFloat(b.value); 
   c= parseFloat(c.value);
}
if (c === 0) 
{
   err= "any x solves the equation"; 
}
else
{ 
   err ="there is no solution"; 
  }  
}
else 
{
} 
else 
{
err ='x='+(-c/b); 
else 
} 
let delta =b**2-4*a*c; 
if (delta >#)  
err ="x1='+(-b+ Math.sqrt(detla)/2/a)
}
else if (delta ==0) 
{
err="x="+(-b/2/a); else 
   err ="x1='+((-b +Math.sgrt(-delta)/2/a) . a.sy +"x2="+((-b-
Math.sart(deIta))12/a);
‹input size=3 id=a›x2 <!--</sup› + x +  = 0
‹input type=button value=Solve onclick=solve() ›
‹div id=solution>-->
Solution area
‹/div>/body>
‹script>
function solve)
<!--</sup>--> <!--& l t ;/body>--><!--& l t ;/html>-->
let a = document. get Element By Id('a');
let b = document. get Element By Id('b');
let c = document. get Element By Id( 'b');
b. focus ();
alert( 'please enter a number');
else if (is NN(c. value))
｛
 = 'c is not a number.';
c. focus );
alert('please enter a number');
else
｛
a = parse Float(a. value);
b = parse Float(b. value);
c = parse Float (c. value);
if (a
= 0）
｛
Tb =:
== 6）
if (C === 0)
err = "any x solves the equation";
err = "any
let delta = b**2 - 4*a*c;
if (delta › 0)
｛
err ="x1=' + ((-b + Math. sqrt(delta))/2/a)
+ "x2=" + ((-b -
Math. sqrt(delta))/2/a);
let area = document-get Element By Id('solution');
//area. inner HTML = err;



object: any -> any type key - value
object is a collection of key-value pairs


syntax:
let x = t;
let y = {a: 1, b:2.5, c: 100}; // similar to CSS
let z = {"a": 1, "bz":2.5, "c":100};
attribute = field = key
Itis not necessary for all


var student record = {
id: "D1003435"
name: "John Smith", register: function(i. n)
{studentrecord.id = i;
studentrecord.name = n;}
student record. register(1,"abc");

student record also can be viewed as a family name

studentrecord also can be viewed as a family name using family name is to promote software reusability by reducing the chance of name collision
studentrecord keys studentrecord values studentrecord.entries
for loop:
for (let key in student record) // iteration/traversal/going through
console.log(student record. key.);